[tool.poetry]
name = "pii-extraction-system"
version = "0.1.0"
description = "Comprehensive PII extraction system with advanced ML techniques and privacy compliance"
authors = ["AI Development Team <dev@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.9.7 || >3.9.7,<4.0"
# Core ML and NLP libraries
torch = "^2.0.0"
transformers = "^4.30.0"
datasets = "^2.12.0"
# Document processing
PyPDF2 = "^3.0.1"
pdfminer-six = "^20221105"
python-docx = "^0.8.11"
Pillow = "^10.0.0"
opencv-python = "^4.8.0"
pytesseract = "^0.3.10"
paddleocr = "^2.7.0"
# AWS and cloud services
boto3 = "^1.26.0"
botocore = "^1.29.0"
# Experiment tracking and monitoring
mlflow = "^2.4.0"
wandb = "^0.15.0"
# Dashboard and UI
streamlit = "^1.25.0"
streamlit-aggrid = "^0.3.4"
plotly = "^5.15.0"
streamlit-drawable-canvas = "^0.9.3"
streamlit-option-menu = "^0.3.6"
# Data processing and utilities
pandas = "^2.0.0"
numpy = "^1.24.0"
scikit-learn = "^1.3.0"
spacy = "^3.6.0"
nltk = "^3.8.0"
# Configuration and environment
pydantic = "^2.0.0"
python-dotenv = "^1.0.0"
pyyaml = "^6.0"
# Logging and monitoring
loguru = "^0.7.0"
# Testing and validation
regex = "^2023.6.3"
# Privacy and compliance
cryptography = "^41.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.4.0"
pre-commit = "^3.3.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.1.0"
mkdocstrings = "^0.22.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests that take more than 5 seconds"
]